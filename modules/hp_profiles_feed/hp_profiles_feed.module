<?php

/**
 * @file
 * Ip_button_link module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function hp_profiles_feed_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hp_profiles_feed':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_preprocess_paragraph().
 *
 * @param $variables
 *   This sets variables for getting events, and then gets events.
 */
function hp_profiles_feed_preprocess_paragraph__hp_profiles_feed(&$variables) {
  // UUID to pass for cache.
  $uuid = $variables['elements']['#paragraph']->uuid->value;

  // Check on env to get events from.
  $env = $variables['elements']['#paragraph']->field_hp_pf_environment->value;
  $env_url = 'https://profiles.howard.edu';
  if ($env == 'stg') {
    $env_url = 'http://stg.profiles.howard.edu';
  }
  elseif ($env == 'dev') {
    $env_url = 'http://dev.profiles.howard.edu';
  }
  $variables['hp_pf_env_url'] = $env_url;

  // Check on department.
  $department = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_pf_profiles_department->value)) {
    $department = $variables['elements']['#paragraph']->field_hp_pf_profiles_department->value;
    // Decode string workaround due to bug in core or external_data_source.
    $department = str_replace('id=', '', $department);
  }

  // Check for the prefered display sort.
  $sort = 'all';
  if (isset($variables['elements']['#paragraph']->field_hp_pf_sort->value)) {
    $sort = $variables['elements']['#paragraph']->field_hp_pf_sort->value;
  }

  // Get profiles.
  $variables['hp_pf_profiles'] = \Drupal::service('howard.profiles')->getProfiles($env_url, $sort, $department, $uuid);

}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function hp_profiles_feed_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__hp_profiles_feed' => [
      'base hook' => 'paragraph',
    ],
  ];
}

// UPDATES
// .

/**
 * Updates to add a dropbox to flatten feed hierachy .
 */
function hp_profiles_feed_update_8002() {
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_profiles_feed');
}

/**
 * Remove old profiles fields and info, and re-add new fields, to go to the new profiles.howard site.
 */
function hp_profiles_feed_update_8003()
{
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_profiles_feed');
  // Remove old sort by field.
  if (FieldConfig::loadByName('paragraph', 'hp_profiles_feed', 'field_sort_by') !== NULL ) {
    FieldConfig::loadByName('paragraph', 'hp_profiles_feed', 'field_sort_by')->delete();
  }
  // Remove old level field.
  if (FieldConfig::loadByName('paragraph', 'hp_profiles_feed', 'field_hp_pf_level') !== NULL ) {
    FieldConfig::loadByName('paragraph', 'hp_profiles_feed', 'field_hp_pf_level')->delete();
  }
  // Remove old exclude leadership field.
  if (FieldConfig::loadByName('paragraph', 'hp_profiles_feed', 'field_exclude_leadership') !== NULL ) {
    FieldConfig::loadByName('paragraph', 'hp_profiles_feed', 'field_exclude_leadership')->delete();
  }
}

/**
 * Updates to help text for environment.
 */
function hp_profiles_feed_update_8004() {
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_profiles_feed');
}

/**
 * Updates to add descriptive text field.
 */
function hp_profiles_feed_update_8005() {
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_profiles_feed');
}
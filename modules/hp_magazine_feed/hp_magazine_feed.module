<?php

/**
 * @file
 * Hp_magazine_feed module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function hp_magazine_feed_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hp_magazine_feed':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_preprocess_paragraph().
 *
 * @param $variables
 *   This sets variables for getting articles, and then gets articles.
 */
function hp_magazine_feed_preprocess_paragraph__hp_magazine_feed(&$variables) {
  // UUID to pass for cache.
  $uuid = $variables['elements']['#paragraph']->uuid->value;

  // Check on env to get events from.
  $env = $variables['elements']['#paragraph']->field_hp_mf_environment->value;
  $env_url = 'https://magazine.howard.edu';
  if ($env == 'stg') {
    $env_url = 'https://stg.magazine.howard.edu';
  }
  elseif ($env == 'dev') {
    $env_url = 'https://dev.magazine.howard.edu';
  }
  $variables['hp_mf_env_url'] = $env_url;
  $variables['hp_mf_default_image'] = '/' . drupal_get_path('module', 'hp_news_feed') . '/assets/hp_news_feed_default.jpg';

  // Check on categories filter.
  $category = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_mf_article_category->value)) {
    $category = $variables['elements']['#paragraph']->field_hp_mf_article_category->value;
    // Decode string workaround due to bug in core or external_data_source.
    $category = str_replace('id=', '', $category);
  }

  // Get magazine articles.
  $variables['hp_mf_articles'] = \Drupal::service('howard.news')->getMagazineArticles($env_url, $category, 3, $uuid);

}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function hp_magazine_feed_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__hp_magazine_feed' => [
      'base hook' => 'paragraph',
    ],
  ];
}

// UPDATES
// .

/**
 * Update feed for new magazine.howard.edu site.
 */
function hp_magazine_feed_update_8001()
{
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_magazine_feed');
}

/**
 * Remove any instances of the old paragraph type, then re-install fresh.
 */
function hp_magazine_feed_update_8002()
{
  // Delete existing paragraphs
  $paragraphs = \Drupal::entityTypeManager()
    ->getStorage('paragraph')
    ->loadByProperties(array('type' => 'hp_magazine_feed')); // System name

  foreach ($paragraphs as $paragraph) {
      $paragraph->delete();
  }

  // Delete bundle
  $para_type = \Drupal::entityTypeManager()->getStorage('paragraphs_type')->load('hp_magazine_feed');
  if($para_type !== NULL) {
    $para_type->delete();
  }   

  // Re-install fresh
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_magazine_feed');
}
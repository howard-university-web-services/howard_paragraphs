<?php

/**
 * @file
 * Hp_alumni_feed module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function hp_alumni_feed_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hp_alumni_feed':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_preprocess_paragraph().
 *
 * @param $variables
 *   This sets variables for getting profiles, and then gets profiles.
 */
function hp_alumni_feed_preprocess_paragraph__hp_featured_student_alumni_feed(&$variables) {
  // UUID to pass for cache.
  $uuid = $variables['elements']['#paragraph']->uuid->value;

  // Check on env to get people from.
  $env = $variables['elements']['#paragraph']->field_hp_pf_environment->value;
  $env_url = 'https://thedig.howard.edu';
  if ($env == 'stg') {
    $env_url = 'https://stg.thedig.howard.edu';
  }
  elseif ($env == 'dev') {
    $env_url = 'https://dev.thedig.howard.edu';
  }
  $variables['hp_af_env_url'] = $env_url;

  // Check on admin categories filter.
  $category = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_af_alumni_admin_categor->value)) {
    $category = $variables['elements']['#paragraph']->field_hp_af_alumni_admin_categor->value;
    // Decode string workaround due to bug in core or external_data_source.
    $category = str_replace('id=', '', $category);
  }

  // Get the desired type of feed.
  $feed_type = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_af_feed_type->value)) {
    $feed_type = $variables['elements']['#paragraph']->field_hp_af_feed_type->value;
    $variables['hp_af_type'] = $feed_type;
  }

  // Get profiles.
  $variables['hp_af_profiles'] = \Drupal::service('howard.news')->getPeople($env_url, NULL, $category, $feed_type, 50, $uuid);

}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function hp_alumni_feed_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__hp_featured_student_alumni_feed' => [
      'base hook' => 'paragraph',
    ],
  ];
}


// UPDATES

/**
 * Updates to allow categories.
 */
function hp_alumni_feed_update_8001() {
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_alumni_feed');
}

/**
 * Updates to show/hide quote.
 */
function hp_alumni_feed_update_8002() {
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_alumni_feed');
}

/**
 * Updates to fix show/hide quote ordering on form.
 */
function hp_alumni_feed_update_8003() {
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_alumni_feed');
}

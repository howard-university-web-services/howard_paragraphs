<?php

/**
 * @file
 * Hp_announcements_feed module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function hp_announcements_feed_help($route_name, RouteMatchInterface $route_match)
{
  switch ($route_name) {
    case 'help.page.hp_announcements_feed':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      } else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_preprocess_paragraph().
 *
 * @param $variables
 *   This sets variables for getting events, and then gets events.
 */
function hp_announcements_feed_preprocess_paragraph__hp_announcements_feed(&$variables)
{
  // UUID to pass for cache.
  $uuid = $variables['elements']['#paragraph']->uuid->value;

  // Check on env to get events from.
  $env = $variables['elements']['#paragraph']->field_hp_anf_environment->value;
  $env_url = 'https://thedig.howard.edu';
  if ($env == 'stg') {
    $env_url = 'https://stg.thedig.howard.edu';
  } elseif ($env == 'dev') {
    $env_url = 'https://dev.thedig.howard.edu';
  }
  $variables['hp_anf_env_url'] = $env_url;

  // Get range.
  $range = 3;
  if (isset($variables['elements']['#paragraph']->field_hp_anf_range->value)) {
    $range = $variables['elements']['#paragraph']->field_hp_anf_range->value;
  }
  // Check on categories filter.
  $category = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_anf_category->value)) {
    $category = $variables['elements']['#paragraph']->field_hp_anf_category->value;
    // Decode string workaround due to bug in core or external_data_source.
    $category = str_replace('id=', '', $category);
  }

  // Check on sponsoring unit filter.
  $unit = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_anf_unit->value)) {
    $howard_forward = $variables['elements']['#paragraph']->field_hp_anf_unit->value;
    // Decode string workaround due to bug in core or external_data_source.
    $unit = str_replace('id=', '', $unit);
  }

  // Get announcements.
  $variables['hp_anf_announcements'] = \Drupal::service('howard.news')->getAnnouncements($env_url, $category, $unit, $range, $uuid);

}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function hp_announcements_feed_theme($existing, $type, $theme, $path)
{
  return [
    'paragraph__hp_announcements_feed' => [
      'base hook' => 'paragraph',
    ],
  ];
}

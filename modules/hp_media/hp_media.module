<?php

/**
 * @file
 * Ip_media module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\media\Entity\Media;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function hp_media_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.hp_media':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function hp_media_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__hp_media' => [
      'base hook' => 'paragraph',
    ],
    'field__paragraph__field_hp_md_caption' => [
      'base hook' => 'paragraph',
    ],
    'field__paragraph__field_hp_md_title' => [
      'base hook' => 'paragraph',
    ],
    'field__paragraph__field_hp_md_media' => [
      'base hook' => 'paragraph',
    ],
  ];
}

/**
 * Implements hook_preprocess_paragraph().
 *
 * @param $variables
 *   This sets several classes needed for the card type.
 */
function hp_media_preprocess_paragraph__hp_media(&$variables) {
  $paragraph = $variables['elements']['#paragraph'];

  // Get media image URL.
  if ($paragraph->hasField('field_hp_md_media')) {
    $media = $paragraph->get('field_hp_md_media')->getValue();
    if ($media && !empty($media)) {
      $entity = Media::load($media[0]['target_id']);
      if ($entity !== NULL) {
        $variables['hp_media_type'] = $entity->bundle();
      }
    }
  }

}

// UPDATES

/**
 * Change default display type of media to hc_full.
 */
function hp_media_update_8001()
{
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_media');
}

<?php

/**
 * @file
 * Hp_news_feed module file.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function hp_news_feed_help($route_name, RouteMatchInterface $route_match)
{
  switch ($route_name) {
    case 'help.page.hp_news_feed':
      $text = file_get_contents(dirname(__FILE__) . "/README.md");
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      } else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Implements hook_preprocess_paragraph().
 *
 * @param $variables
 *   This sets variables for getting events, and then gets events.
 */
function hp_news_feed_preprocess_paragraph__hp_news_feed(&$variables)
{
  // UUID to pass for cache.
  $uuid = $variables['elements']['#paragraph']->uuid->value;

  // Check on env to get events from.
  $env = $variables['elements']['#paragraph']->field_hp_nf_environment->value;
  $env_url = 'https://thedig.howard.edu';
  if ($env == 'stg') {
    $env_url = 'https://stg.thedig.howard.edu';
  } elseif ($env == 'dev') {
    $env_url = 'https://dev.thedig.howard.edu';
  }
  $variables['hp_nf_env_url'] = $env_url;
  $variables['hp_nf_default_image'] = '/' . drupal_get_path('module', 'hp_news_feed') . '/assets/hp_news_feed_default.jpg';

  // Check on categories filter.
  $category = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_nf_dg_category->value)) {
    $category = $variables['elements']['#paragraph']->field_hp_nf_dg_category->value;
    // Decode string workaround due to bug in core or external_data_source.
    $category = str_replace('id=', '', $category);
  }

  // Check on initiatives filter.
  $initiatives = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_nf_dg_initiative->value)) {
    $initiatives = $variables['elements']['#paragraph']->field_hp_nf_dg_initiative->value;
    // Decode string workaround due to bug in core or external_data_source.
    $initiatives = str_replace('id=', '', $initiatives);
  }

  // Check on units filter.
  $units = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_nf_dg_unit->value)) {
    $units = $variables['elements']['#paragraph']->field_hp_nf_dg_unit->value;
    // Decode string workaround due to bug in core or external_data_source.
    $units = str_replace('id=', '', $units);
  }

  // Check on Schools and Colleges filter.
  $schools_colleges = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_nf_dg_schools_colleges->value)) {
    $schools_colleges = $variables['elements']['#paragraph']->field_hp_nf_dg_schools_colleges->value;
    // Decode string workaround due to bug in core or external_data_source.
    $schools_colleges = str_replace('id=', '', $schools_colleges);
  }

  // Check on Howard Forward filter.
  $howard_forward = NULL;
  if (isset($variables['elements']['#paragraph']->field_hp_nf_dg_howard_forward->value)) {
    $howard_forward = $variables['elements']['#paragraph']->field_hp_nf_dg_howard_forward->value;
    // Decode string workaround due to bug in core or external_data_source.
    $howard_forward = str_replace('id=', '', $howard_forward);
  }

  // Get the desired type of feed.
  $feed_type = $variables['elements']['#paragraph']->field_hp_nf_feed_type->value;
  $variables['hp_nf_type'] = $feed_type;

  // Get news.
  if ($feed_type == 'three_w_images') {
    $variables['hp_nf_news'] = \Drupal::service('howard.news')->getArticles($env_url, $category, $initiatives, $units, $schools_colleges, $howard_forward, 3, $uuid);
  } elseif ($feed_type == 'three_w_one_featured') {
    $variables['hp_nf_news'] = \Drupal::service('howard.news')->getArticles($env_url, $category, $initiatives, $units, $schools_colleges, $howard_forward, 4, $uuid);
  } elseif ($feed_type == 'four_w_one_featured') {
    $variables['hp_nf_news'] = \Drupal::service('howard.news')->getArticles($env_url, $category, $initiatives, $units, $schools_colleges, $howard_forward, 5, $uuid);
  } elseif ($feed_type == 'twenty_wo_images') {
    $variables['hp_nf_news'] = \Drupal::service('howard.news')->getArticles($env_url, $category, $initiatives, $units, $schools_colleges, $howard_forward, 20, $uuid);
  }
}

/**
 * Implements hook_theme().
 * Lets us define our paragraphs templates in this module.
 */
function hp_news_feed_theme($existing, $type, $theme, $path)
{
  return [
    'paragraph__hp_news_feed' => [
      'base hook' => 'paragraph',
    ],
  ];
}


// UPDATES
// .

/**
 * Add schools and colleges optional filter.
 */
function hp_news_feed_update_8001()
{
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_news_feed');
}

/**
 * Add howard forward optional filter.
 */
function hp_news_feed_update_8002()
{
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_news_feed');
}

/**
 * Add new news feed option.
 */
function hp_news_feed_update_8003()
{
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_news_feed');
}

/**
 * Remove old newsroom fields and info, and re-add new fields, to go to the new dig.howard site.
 */
function hp_news_feed_update_8004()
{
  \Drupal::service('config.installer')->installDefaultConfig('module', 'hp_news_feed');
  // Remove admin category field.
  if (FieldConfig::loadByName('paragraph', 'hp_news_feed', 'field_hp_nf_news_admin_category') !== NULL ) {
    FieldConfig::loadByName('paragraph', 'hp_news_feed', 'field_hp_nf_news_admin_category')->delete();
  }
  // Remove category field.
  if (FieldConfig::loadByName('paragraph', 'hp_news_feed', 'field_hp_nf_news_category') !== NULL ) {
    FieldConfig::loadByName('paragraph', 'hp_news_feed', 'field_hp_nf_news_category')->delete();
  }
  // Remove howard forward field.
  if (FieldConfig::loadByName('paragraph', 'hp_news_feed', 'field_hp_nf_news_howard_forward') !== NULL ) {
    FieldConfig::loadByName('paragraph', 'hp_news_feed', 'field_hp_nf_news_howard_forward')->delete();
  }
  // Remove schools colleges field.
  if (FieldConfig::loadByName('paragraph', 'hp_news_feed', 'field_hp_nf_news_schools_college') !== NULL ) {
    FieldConfig::loadByName('paragraph', 'hp_news_feed', 'field_hp_nf_news_schools_college')->delete();
  }
}
